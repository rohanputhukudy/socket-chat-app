{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport io from 'socket.io-client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction App() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      msg = _React$useState2[0],\n      setMsg = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      log = _React$useState4[0],\n      setLog = _React$useState4[1];\n\n  useEffect(function () {\n    socket = io(\"http://127.0.0.1:3000\");\n  }, []);\n  useEffect(function () {\n    socket.on('chat message', function (chatMsg) {\n      setLog([].concat(_toConsumableArray(log), [_jsx(Text, {\n        style: {\n          borderWidth: 2,\n          top: 500\n        },\n        children: chatMsg\n      }, chatMsg)]));\n    });\n  }, [log]);\n\n  var submitChatMessage = function submitChatMessage() {\n    socket.emit('chat message', msg);\n    setMsg(\"\");\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: log\n    }), _jsx(TextInput, {\n      style: {\n        height: 40,\n        borderWidth: 2,\n        top: 600\n      },\n      autoCorrect: false,\n      value: msg,\n      onSubmitEditing: submitChatMessage,\n      onChangeText: function onChangeText(chatMessage) {\n        return setMsg(chatMessage);\n      }\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    height: 400,\n    flex: 1,\n    backgroundColor: '#F5FCFF'\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/rohan/Source/simple-chat-app/chat-client/App.js"],"names":["React","useEffect","useState","io","App","msg","setMsg","log","setLog","socket","on","chatMsg","borderWidth","top","submitChatMessage","emit","styles","container","height","chatMessage","StyleSheet","create","flex","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;;;;AAEA,SAASC,GAAT,GAAe;AACb,wBAAsBJ,KAAK,CAACE,QAAN,CAAe,EAAf,CAAtB;AAAA;AAAA,MAAOG,GAAP;AAAA,MAAYC,MAAZ;;AACA,yBAAsBN,KAAK,CAACE,QAAN,CAAe,EAAf,CAAtB;AAAA;AAAA,MAAOK,GAAP;AAAA,MAAYC,MAAZ;;AAGAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,MAAM,GAAGN,EAAE,CAAC,uBAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAKAF,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,MAAM,CAACC,EAAP,CAAU,cAAV,EAA0B,UAACC,OAAD,EAAa;AACnCH,MAAAA,MAAM,8BAAKD,GAAL,IAAU,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,WAAW,EAAE,CAAd;AAAiBC,UAAAA,GAAG,EAAE;AAAtB,SAAb;AAAA,kBAAwDF;AAAxD,SAA8CA,OAA9C,CAAV,GAAN;AACH,KAFD;AAGD,GAJQ,EAIN,CAACJ,GAAD,CAJM,CAAT;;AAOA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BL,IAAAA,MAAM,CAACM,IAAP,CAAY,cAAZ,EAA4BV,GAA5B;AACAC,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAHD;;AAKA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAA,gBAAOV;AAAP,MADF,EAEE,KAAC,SAAD;AACE,MAAA,KAAK,EAAE;AAACW,QAAAA,MAAM,EAAE,EAAT;AAAaN,QAAAA,WAAW,EAAE,CAA1B;AAA6BC,QAAAA,GAAG,EAAE;AAAlC,OADT;AAEE,MAAA,WAAW,EAAE,KAFf;AAGE,MAAA,KAAK,EAAER,GAHT;AAIE,MAAA,eAAe,EAAES,iBAJnB;AAKE,MAAA,YAAY,EAAE,sBAAAK,WAAW;AAAA,eAAIb,MAAM,CAACa,WAAD,CAAV;AAAA;AAL3B,MAFF;AAAA,IADF;AAYD;;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,GADC;AAETI,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,eAAe,EAAE;AAHR;AADoB,CAAlB,CAAf;AAQA,eAAenB,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, TextInput, View, StyleSheet } from 'react-native';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [msg, setMsg] = React.useState(\"\");\n  const [log, setLog] = React.useState([]);\n\n  // Connects socket once\n  useEffect(() => {\n    socket = io(\"http://127.0.0.1:3000\");\n  }, []);\n\n  // seemingly need to run this line every time log changes\n  useEffect(() => {\n    socket.on('chat message', (chatMsg) => {\n        setLog([...log, <Text style={{borderWidth: 2, top: 500}} key={chatMsg}>{chatMsg}</Text>]);\n    });\n  }, [log]);\n\n  // sends message to server every time enter is pressed\n  const submitChatMessage = () => {\n    socket.emit('chat message', msg);\n    setMsg(\"\")\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>{log}</View>\n      <TextInput\n        style={{height: 40, borderWidth: 2, top: 600}}\n        autoCorrect={false}\n        value={msg}\n        onSubmitEditing={submitChatMessage}\n        onChangeText={chatMessage => setMsg(chatMessage)}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 400,\n    flex: 1,\n    backgroundColor: '#F5FCFF',\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}